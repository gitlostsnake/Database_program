import sqlite3


def connect():
    conn = sqlite3.connect("road_works.db")
    cur = conn.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS TMinventory
                (id INTEGER PRIMARY KEY, name TEXT,
                amount TEXT, price TEXT, warning_level TEXT)
                """)
    conn.commit()
    conn.close()

### Need to think about how the database is going to take items which are
### much simpler than the road_works.db items and add them together when
### We want them to.

def insert(name, amount, price, warning_level):
    conn = sqlite3.connect("road_works.db")
    cur = conn.cursor()
    cur.execute("INSERT INTO TMinventory VALUES (NULL, ?,?,?,?)",
                (name, amount, price, warning_level))
    conn.commit()
    conn.close()


def view():
    conn = sqlite3.connect("road_works.db")
    cur = conn.cursor()
    cur.execute("SELECT * FROM TMinventory")
    rows = cur.fetchall()
    conn.close()
    return rows


def delete(id):
    conn = sqlite3.connect("road_works.db")
    cur = conn.cursor()
    cur.execute("DELETE FROM TMinventory WHERE id=?", (id,))
    conn.commit()
    conn.close()


def update(id, name, amount, price, warning_level):
    conn = sqlite3.connect("road_works.db")
    cur = conn.cursor()
    cur.execute("""UPDATE TMinventory SET name=?,
                amount =?, price =?, warning_level=? WHERE id=?""",
                (name, amount, price, warning_level, id))
    conn.commit()
    conn.close()



connect()
